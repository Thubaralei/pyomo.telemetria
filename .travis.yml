language: python
matrix:
  include:
  - python: '2.7'
    env:    CATEGORY="parallel" EXTRAS="yes"
  - python: '3.5'
    env:    CATEGORY="parallel" EXTRAS="yes"
  - python: '3.6'
    env:    CATEGORY="parallel" EXTRAS="yes"

install:
- sudo apt-get update --quiet
#
# Setup miniconda and activate the testenv environment
#
- if [[ "${TRAVIS_PYTHON_VERSION:0:1}" == "2" ]]; then
     wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
  else
     wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda create -f -q -y -n testenv python=${TRAVIS_PYTHON_VERSION}
- source activate testenv
#
# Install supporting packages
#
- if [ "${TRAVIS_PYTHON_VERSION}" == "2.6" ]; then
     pip install --quiet ordereddict;
  fi
- pip install --quiet coverage
- pip install --quiet codecov
- if [ -n "${YAML}" ]; then
     pip install --quiet pyyaml;
  fi
- if [ -n "${PYRO}" ]; then
     pip install --quiet $PYRO;
  fi
- pip install --quiet xlrd
- pip install --quiet openpyxl
- pip install --quiet jupyter_client
- conda install -q -y -c pandas networkx jupyter
#
- if [ -n "${EXTRAS}" ]; then conda install -q -y --channel conda-forge pyomo.extras; fi
- if [ "$TRAVIS_PYTHON_VERSION" != "2.6" -a -n "${EXTRAS}" ]; then
     conda install -q -y -c anaconda scipy;
  fi
- conda install -q -y --channel conda-forge glpk
- conda install -q -y --channel conda-forge ipopt

#
# Install PyUtilib (master branch)
#
- pip install --quiet git+https://github.com/PyUtilib/pyutilib
#
# Install Pyomo (master branch)
#
- pip install --quiet git+https://github.com/Pyomo/pyomo
#
# Do not install this package
#
- which python
- python --version
script:
- python test_notebooks.py
after_success:
# Combine coverage reports over all subprocesses
- cd $TRAVIS_BUILD_DIR
